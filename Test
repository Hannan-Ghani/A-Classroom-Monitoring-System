def logTransactionIds(transactionIds: List[String], validationType: String, outputBasePath: String)(implicit spark: SparkSession): Unit = {
    import spark.implicits._
    val unmatchedIdsDF = transactionIds.toDF("UnmatchedTransactionIDs")
    val sanitizedValidationType = validationType.replace(" ", "_")
    val outputPath = s"$outputBasePath/${sanitizedValidationType}_unmatched_ids"

    try {
        unmatchedIdsDF.write.mode("overwrite").text(outputPath)
        println(s"Successfully wrote unmatched IDs for $validationType to $outputPath")
    } catch {
        case e: Exception =>
            println(s"Error writing unmatched IDs for $validationType: ${e.getMessage}")
    }
}