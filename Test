const fs = require('fs');
const diff = require('deep-diff').diff;

function readJSONFile(filePath) {
    try {
        return JSON.parse(fs.readFileSync(filePath, 'utf8'));
    } catch (error) {
        console.error(`Error reading file from disk: ${error}`);
        process.exit(1);
    }
}

function compareAndHighlight(jsonFilePath1, jsonFilePath2, outputHtmlPath) {
    const originalJson = readJSONFile(jsonFilePath1);
    const modifiedJson = readJSONFile(jsonFilePath2);

    // Ensure we always work with an array for differences
    const differences = diff(originalJson, modifiedJson) || [];

    const originalHtml = jsonToHtml(originalJson, []); // Pass an empty array for differences
    const modifiedHtml = jsonToHtml(modifiedJson, differences); // Pass actual differences

    const fullHtml = `<html><head><style>
        body { font-family: monospace; display: flex; padding: 20px; background-color: #f5f5f5; }
        .container { width: 50%; margin-right: 20px; }
        .added { background-color: #ddffdd; }
        .deleted { background-color: #ffdddd; }
        .edited { background-color: #ffffcc; }
        pre { background-color: #fff; border-radius: 5px; padding: 10px; overflow-x: auto; }
    </style></head><body>
    <div class="container"><h2>Original JSON</h2><pre>${originalHtml}</pre></div>
    <div class="container"><h2>Modified JSON</h2><pre>${modifiedHtml}</pre></div>
    </body></html>`;

    fs.writeFileSync(outputHtmlPath, fullHtml, 'utf8');
    console.log(`The comparison result has been saved to ${outputHtmlPath}`);
}

function jsonToHtml(json, differences, path = '') {
    if (json && typeof json === 'object') {
        const isArray = Array.isArray(json);
        const entries = Object.entries(json).map(([key, value]) => {
            const newPath = path + (path ? '.' : '') + key;
            const diffType = findDifferenceType(differences, newPath);
            const valueHtml = jsonToHtml(value, differences, newPath);
            return `<div${diffType ? ` class="${diffType}"` : ''}>${isArray ? '' : `"${key}": `}${valueHtml}</div>`;
        });
        return isArray ? `[${entries.join(',')}]` : `{${entries.join(',')}}`;
    } else {
        return JSON.stringify(json);
    }
}

function findDifferenceType(differences, path) {
    // Safely use .find() on differences, as it's ensured to be an array
    const diff = differences.find(d => d.path.join('.') === path);
    return diff ? (diff.kind === 'N' ? 'added' : diff.kind === 'D' ? 'deleted' : 'edited') : '';
}

if (process.argv.length !== 5) {
    console.log('Usage: node compareJsons.js <path to original JSON> <path to modified JSON> <output HTML path>');
    process.exit(1);
}

const [,, originalJsonPath, modifiedJsonPath, outputHtmlPath] = process.argv;
compareAndHighlight(originalJsonPath, modifiedJsonPath, outputHtmlPath);
