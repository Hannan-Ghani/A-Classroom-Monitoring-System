// Helper function to read configuration file from S3 with error handling
def readConfigFromS3(s3Path: String): Map[String, String] = {
  val configDF = sparkSession.read.text(s3Path)
  
  configDF.collect().flatMap { row =>
    val line = row.getString(0).trim
    if (line.contains("=") && line.nonEmpty) {
      val split = line.split("=")
      if (split.length == 2) {
        Some(split(0).trim -> split(1).trim)
      } else {
        logger.warn(s"Skipping malformed line: $line")
        None
      }
    } else {
      logger.warn(s"Skipping invalid line (no key=value format): $line")
      None
    }
  }.toMap
}